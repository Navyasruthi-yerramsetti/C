#include<stdio.h>

void main()
{
    int available[3], work[3], max[5][3], allocation[5][3], need[5][3], safe[5], totalres[3];
    int finish[5];
    int i, j, totalloc = 0, state, value = 0;

    printf("\n Enter Instances of each resource: ");
    for (i = 0; i < 3; i++)
    {
        scanf("%d", &totalres[i]);
    }

    printf("\n Enter maximum number of resources for each process:\n");
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            printf("\n Enter process %d resource %d: ", i, (j + 1));
            scanf("%d", &max[i][j]);
        }
    }

    printf("\n Enter resources allocated to each process:\n");
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            printf("\n Enter the resources of r%d allocated to process %d: ", (j + 1), i);
            scanf("%d", &allocation[i][j]);
        }
    }

    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }

    for (i = 0; i < 5; i++)
    {
        finish[i] = 0; // 0 means false
    }

    for (i = 0; i < 3; i++)
    {
        totalloc = 0;
        for (j = 0; j < 5; j++)
        {
            totalloc = totalloc + allocation[j][i];
        }
        available[i] = totalres[i] - totalloc;
        work[i] = available[i];
    }

    printf("\n Allocated resources:\n");
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            printf("%d ", allocation[i][j]);
        }
        printf("\n");
    }

    printf("\n Maximum resources:\n");
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            printf("%d ", max[i][j]);
        }
        printf("\n");
    }

    printf("\n Needed resources:\n");
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 3; j++)
        {
            printf("%d ", need[i][j]);
        }
        printf("\n");
    }

    printf("\n Available resources:\n");
    for (i = 0; i < 3; i++)
    {
        printf("%d ", available[i]);
    }
    printf("\n");

    while (value < 5)
    {
        state = 0;
        for (i = 0; i < 5; i++)
        {
            if (finish[i] == 0) // Not finished
            {
                int flag = 1;
                for (j = 0; j < 3; j++)
                {
                    if (need[i][j] > work[j])
                    {
                        flag = 0;
                        break;
                    }
                }
                if (flag == 1)
                {
                    for (j = 0; j < 3; j++)
                    {
                        work[j] = work[j] + allocation[i][j];
                    }
                    finish[i] = 1; // Mark process as finished
                    safe[value] = i;
                    value++;
                    state = 1;
                }
            }
        }
        if (state == 0) // No process could be allocated
        {
            printf("\n System is not in a safe state.\n");
            return;
        }
    }

    printf("\n Safe sequence is: ");
    for (i = 0; i < 5; i++)
    {
        printf("P%d ", safe[i]);
    }
    printf("\n");
}
