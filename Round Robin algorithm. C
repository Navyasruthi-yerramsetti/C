#include <stdio.h>

int main() {
    int st[10], at[10], bt[10], wt[10], tat[10], n, tq;
    int i, count = 0, swt = 0, stat = 0, temp, sq = 0, j, temp1, temp2;
    float awt = 0.0, atat = 0.0;

    printf("\nEnter number of processes to be executed: ");
    scanf("%d", &n);

    printf("\nEnter burst time sequences: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &bt[i]);
    }

    printf("\nEnter arrival times: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &at[i]);
    }

    // Sorting based on arrival times
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (at[i] > at[j]) {
                temp1 = at[i];
                at[i] = at[j];
                at[j] = temp1;

                temp2 = bt[i];
                bt[i] = bt[j];
                bt[j] = temp2;
            }
        }
    }

    // Copy burst times
    for (i = 0; i < n; i++) {
        st[i] = bt[i];
    }

    printf("\nEnter time quantum: ");
    scanf("%d", &tq);

    while (1) {
        count = 0;
        for (i = 0; i < n; i++) {
            temp = tq;

            if (st[i] == 0) {
                count++;
                continue;
            }

            if (st[i] > tq) {
                st[i] -= tq;
            } else {
                temp = st[i];
                st[i] = 0;
            }

            sq += temp;
            tat[i] = sq - at[i];
        }

        if (count == n) {
            break;
        }
    }

    for (i = 0; i < n; i++) {
        wt[i] = tat[i] - bt[i];
        swt += wt[i];
        stat += tat[i];
    }

    awt = (float)swt / n;
    atat = (float)stat / n;

    printf("\npno\tat\tbt\twt\ttat\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\n", i + 1, at[i], bt[i], wt[i], tat[i]);
    }

    printf("\nAverage waiting time: %.2f\nAverage turnaround time: %.2f\n", awt, atat);

    return 0;
}
